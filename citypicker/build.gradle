apply plugin: 'com.android.library'
apply plugin: 'org.greenrobot.greendao' // apply plugin

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    testCompile 'junit:junit:4.12'
    compile 'org.greenrobot:greendao:3.2.2' // add library
}

greendao {
    //指定数据库schema版本号，迁移等操作会用到
    schemaVersion 1

    //DaoSession、DaoMaster以及所有实体类的dao生成的目录,默认为你的entity所在的包名
    //daoPackage 包名
    daoPackage 'com.mtf.citypicker.green'

    //这就是我们上面说到的自定义生成数据库文件的目录了，可以将生成的文件放到我们的java目录中，而不是build中，这样就不用额外的设置资源目录了
    //工程路径
    targetGenDir 'src/main/java'
}

//以下是提交到jcenter仓储的相关配置
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

//项目主页
def siteUrl = 'https://github.com/shimingbao/'    // 修改为你的项目的主页
//项目的版本控制地址
def gitUrl = 'https://github.com/shimingbao/CityPicker' // 修改为你的Git仓库的url

//发布到组织名称名字，必须填写
group = "com.shimingbao"
//发布到JCenter上的项目名字，必须填写
def libName = "citypicker"
// 版本号，下次更新是只需要更改版本号即可
version = "1.0.0"
/**  上面配置后上传至jcenter后的编译路径是这样的： compile 'com.shimingbao:androidutils:1.0.0'  **/

//生成源文件
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
//生成文档
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    // 如果你的项目里面有中文注释的话，必须将格式设置为UTF-8，不然会出现乱码
    options.encoding "UTF-8"
    options.charSet 'UTF-8'
    options.author true
    options.version true
    failOnError false
}

//文档打包成jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

//拷贝javadoc文件
task copyDoc(type: Copy) {
    from "${buildDir}/docs/"
    into "docs"
}

//上传到jcenter所需要的源码文件
artifacts {
    archives javadocJar
    archives sourcesJar
}

// 配置maven库，生成POM.xml文件
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name 'This is a CityPicker for android' // 项目描述
                url siteUrl
                licenses {
                    license { // 开源协议
                        name 'This is a CityPicker for android'
                        url 'https://github.com/shimingbao/CityPicker'
                    }
                }
                developers {
                    developer {
                        // 开发者个人信息
                        id 'tengfei'
                        name 'tengfei'
                        email 'celine88@qq.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

//上传到jcenter
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")    //读取 local.properties 文件里面的 bintray.user
    key = properties.getProperty("bintray.apikey")   //读取 local.properties 文件里面的 bintray.apikey
    configurations = ['archives']
    pkg {
        repo = "citypicker"    // repo值必须要和创建Maven仓库的时候的名字一样
        name = libName    // 发布到JCenter上的项目名字，必须填写
        desc = 'This is a CityPicker for android'    //项目描述
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}